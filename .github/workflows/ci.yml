name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        project: [backend, frontend]
    steps:
      - uses: actions/checkout@v3
      
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: 'npm'
      
      - name: Install dependencies
        run: |
          cd ${{ matrix.project }}
          npm install
        working-directory: ./${{ matrix.project }}
      
      - name: Run tests
        run: npm test
        working-directory: ./${{ matrix.project }}

  build:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_TOKEN }}
      
      - name: Build and push backend
        uses: docker/build-push-action@v4
        with:
          context: ./backend
          push: ${{ github.event_name == 'push' }}
          tags: ${{ secrets.DOCKER_HUB_USERNAME }}/roman-numerals-backend:latest
      
      - name: Build and push frontend
        uses: docker/build-push-action@v4
        with:
          context: ./frontend
          push: ${{ github.event_name == 'push' }}
          tags: ${{ secrets.DOCKER_HUB_USERNAME }}/roman-numerals-frontend:latest

  deploy:
    needs: build
    if: github.event_name == 'push'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Install Docker Compose
        run: sudo apt-get install docker-compose-plugin
      
      - name: Deploy with Docker Compose
        run: docker-compose up -d